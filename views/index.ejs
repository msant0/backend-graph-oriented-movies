<form method="post" action="/movie/add">
    <h2>Add Movies</h2>
    <label>Movie Name</label><br>
    <input type="text" name="title">
    <br>
    <label>Year</label><br>
    <input type="text" name="year">
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/person/add">
    <h2>Add Persons</h2>
    <label>Person Name</label><br>
    <input type="text" name="name"><br>
    <br>
    <label>Born</label><br>
    <input type="text" name="born"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/person/add">
    <h2>Add Relationship "ACTED_IN" in Movies with Persons </h2>
    <label>Movie Name</label><br>
    <input type="text" name="title">
    <br>
    <label>Person Name</label><br>
    <input type="text" name="name">
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/rename">
    <h2>Rename your Movie</h2>
    <label>Movie Name</label><br>
    <input type="text" name="title"><br>
    <label>New Movie Name</label><br>
    <input type="text" name="newTitle">
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/person/rename">
    <h2>Rename your Actor</h2>
    <label>Actor Name</label><br>
    <input type="text" name="name"><br>
    <label>New Actor Name</label><br>
    <input type="text" name="newName"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/person/create">
    <h2>Create a new actor related (ACTED_IN) to a new Movie with the properly year of operation</h2>
    <label>Actor Name</label><br>
    <input type="text" name="name"><br>
    <label>Movie Name</label><br>
    <input type="text" name="title"><br>
    <label>Year of perfomance</label><br>
    <input type="text" name="yearPerfomance">
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/person/list">
    <h2>List Movies that the actor acted</h2>
    <label>Actor Name<label><br>
            <input type="text" name="name"><br>
            <br><br>
            <input type="submit" value="submit">
</form>
<form method="post" action="/person/friend/add">
    <h2>Add relantionship [:IS_FRIENDS_WITH] between two Persons</h2>
    <label>1º Actor Name</label><br>
    <input type="text" name="nameActorOne"><br>
    <label>2º Actor Name</label><br>
    <input type="text" name="nameActorTwo"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/findAlias">
    <h2>Find movie with ALIAS</h2>
    <label>Movie Name</label>
    <input type="text" name="title"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/addDescription">
    <h2>Add the 'description' propertie to the movie</h2>
    <label>Select the Movie</label><br>
    <input type="text" name="title"><br>
    <label>Enter description</label><br>
    <input type="text" name="description"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/deleteDescription">
    <h2>Delete the 'description' propertie to the movie</h2>
    <label>Select the Movie</label><br>
    <input type="text" name="title"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/setDescriptionNull">
    <h2>Set the 'description' propertie as NULL</h2>
    <label>Select the Movie</label><br>
    <input type="text" name="title"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/setDescriptionOnCreate">
    <h2>Set the 'description' propertie by ON CREATE</h2>
    <label>Select the Movie</label><br>
    <input type="text" name="title"><br>
    <label>Select the New Description Movie</label><br>
    <input type="text" name="description"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/modifyDescriptionOnMatch">
    <h2>Set the 'description' propertie by ON MATCH</h2>
    <label>Select the Movie</label><br>
    <input type="text" name="title"><br>
    <label>Select the Description Movie</label><br>
    <input type="text" name="description"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/person/addSince">
    <h2>Add 'since' propertie to the relationship between two persons</h2>
    <label>Type the 1ºPerson</label><br>
    <input type="text" name="personOne"><br>
    <label>Type the 2ºPerson</label><br>
    <input type="text" name="personTwo"><br>
    <label>Add the propertie 'since'</label><br>
    <input type="text" name="since"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/person/deleteFriendship">
    <h2>Remove relantionship [:IS_FRIENDS_WITH]</h2>
    <label>Type the 1ºPerson</label><br>
    <input type="text" name="personOne"><br>
    <label>Type the 2ºPerson</label><br>
    <input type="text" name="personTwo"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/person/delete">
    <h2>Remove Person node</h2>
    <label>Type the Person</label><br>
    <input type="text" name="name"><br>
    <br><br>
    <input type="submit" value="submit">
</form>
<form method="post" action="/movie/deleteNoAndLabel">
    <h2>Remove Movie Node and Aresta</h2>
    <label>Movie Name</label><br>
    <input type="text" name="title"><br>
    <br><br>
    <input type="submit" value="submit">
</form>

<h1>Movies</h1>
<ul>
    <% movies.forEach(function(movie){ %>
    <li><%= movie.title %></li>
    <% }) %>
</ul>
<br>
<h1>Persons</h1>
<ul>
    <% persons.forEach(function(person){ %>
    <li><%= person.name %></li>
    <% }) %>
</ul>
<h1>Lists of Filter</h1>
<ul>
    <h4>(language:br) Nega propriedade, ou seja, filtra todos os atores que não sejam o Spencer Spillber</h4>
    <h3>✓ ` MATCH (per:Person) where NOT per.name='Spencer Spillber' return per `</h3>
    <br>
    <h4>(language:br) Estudar em um futuro uso, como funciona o filtro por tempo</h4>
    <h3>✓ // Query Example: MATCH (p:Person) WHERE 3 <= p.yearsExp <= 7 RETURN p</h3>
    <br>
    <h4>(language:br) Retorna todos os filmes que tenham a propriedade 'ano'</h4>
    <h3>✓ `MATCH (mov:Movie) where exists(mov.year) return mov`</h3>
    <br>
    <h4>(language:br) Retorna todos os relacionamentos de atores que existe a propriedade 'since' no relacionamento</h4>
    <h3>✓ `MATCH (per:Person)-[friendship:IS_FRIENDS_WITH]->(perTwo:Person) where exists(friendship.since) return per, perTwo, friendship`</h3>
    <br>
    <h4>(language:br) Retorna todos os filmes, onde a propriedade 'title' COMECE com a sintaxe 'Like'</h4>
    <h3>✓ `MATCH (mov:Movie) where mov.title STARTS WITH 'Like' return mov`</h3>
    <br>
    <h4>(language:br) Retorna todos os filmes, onde na propriedade 'ano' EXISTA a sintaxe '19'</h4>
    <h3>✓ `MATCH (mov:Movie) where mov.year CONTAINS '19' return mov`</h3>
    <br>
    <h4>(language:br) Retorna todos os filmes, onde na propriedade 'title' TERMINE com a sintaxe 'Boss'</h4>
    <h4>obs: O Neo4j é case sensitive</h4>
    <h3>✓ `MATCH (mov:Movie) where mov.title ENDS WITH 'Boss' return mov`</h3>
    <br>
    <h4>(language:br) Retorna todos os nomes dos nós dos atores que compartilham o primeiro nome 'Eduardo'</h4>
    <h3>✓ `MATCH (per:Person) where per.name='Eduardo.*' return per.name`</h3>
    <br>
    <h4>(language:br) Estudar em um futuro uso, de utilizar filtros com o IN</h4>
    <h3>✓ // Query example: `MATCH (p:Person) WHERE p.yearsExp IN [1, 5, 6] RETURN p.name, p.yearsExp`</h3>
    <br>
    <h4>(language:br) Retorna todos os amigos do ator 'Kadu Moliterno' que atuou no filme 'The Glass'</h4>
    <h3>✓ `MATCH (per:Person)-[:IS_FRIENDS_WITH]->(per2:Person) where exists((per)-[:ACTED_IN]->(:Movie {title:'The Glass'})) return p`</h3>
    <br>
    <h4>(language:br) Estudar em um futuro uso, de utilizar a sintaxe de OPTIONAL MATCH</h4>
    <h4>obs: OPTIONAL MATCH é usado como uma comparação de menor peso, onde que se ele não é encontrado na busca ele retorna NULL</h4>
    <h3>✓ MATCH (p:Person) WHERE p.name STARTS WITH 'L' OPTIONAL MATCH (p)-[:ACTED_IN]-(mov:Movie) RETURN p.name, mov.name</h3>
</ul>

